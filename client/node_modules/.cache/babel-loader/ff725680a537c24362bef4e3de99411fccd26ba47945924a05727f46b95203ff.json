{"ast":null,"code":"var _jsxFileName = \"/Users/danny/Documents/Software Engineering/laze/src/Components/GridVis.jsx\",\n  _s = $RefreshSig$();\nimport CellVis from './CellVis';\nimport React, { useContext } from 'react';\nimport { GlobalContext } from '../Context/GlobalState';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Grid(_ref) {\n  _s();\n  let {\n    grid\n  } = _ref;\n  const maze = [];\n  const {\n    players\n  } = useContext(GlobalContext);\n  for (const row of grid.eachRow()) {\n    maze.push(row.map(cell => /*#__PURE__*/_jsxDEV(CellVis, {\n      cell: cell,\n      distance: grid.contentsOf(cell)\n    }, `${cell.row},${cell.column}`, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 33\n    }, this)));\n  }\n  const style = {\n    gridTemplateColumns: `repeat(${grid.columns}, 1fr)`,\n    aspectRatio: `${grid.columns} / ${grid.rows}`\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"grid grid1\",\n    style: style,\n    children: maze\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 5\n  }, this);\n}\n_s(Grid, \"6VQQPfAfhfApu/5IQkpSDZo+7mQ=\");\n_c = Grid;\n;\nvar _c;\n$RefreshReg$(_c, \"Grid\");","map":{"version":3,"names":["CellVis","React","useContext","GlobalContext","Grid","grid","maze","players","row","eachRow","push","map","cell","contentsOf","column","style","gridTemplateColumns","columns","aspectRatio","rows"],"sources":["/Users/danny/Documents/Software Engineering/laze/src/Components/GridVis.jsx"],"sourcesContent":["import CellVis from './CellVis';\nimport React, { useContext } from 'react';\nimport { GlobalContext } from '../Context/GlobalState';\n\nexport default function Grid({ grid }) {\n  const maze = [];\n  const { players } = useContext(GlobalContext)\n  for (const row of grid.eachRow()) {\n    maze.push(row.map((cell) => <CellVis key={`${cell.row},${cell.column}`} cell={cell} distance={grid.contentsOf(cell)}/>))\n  }\n\n  const style = {\n    gridTemplateColumns: `repeat(${grid.columns}, 1fr)`,\n    aspectRatio: `${grid.columns} / ${grid.rows}`,\n  }\n\n  return (\n    <div className='grid grid1' style={style}>\n      {maze}\n    </div>\n  );\n};\n"],"mappings":";;AAAA,OAAOA,OAAO,MAAM,WAAW;AAC/B,OAAOC,KAAK,IAAIC,UAAU,QAAQ,OAAO;AACzC,SAASC,aAAa,QAAQ,wBAAwB;AAAC;AAEvD,eAAe,SAASC,IAAI,OAAW;EAAA;EAAA,IAAV;IAAEC;EAAK,CAAC;EACnC,MAAMC,IAAI,GAAG,EAAE;EACf,MAAM;IAAEC;EAAQ,CAAC,GAAGL,UAAU,CAACC,aAAa,CAAC;EAC7C,KAAK,MAAMK,GAAG,IAAIH,IAAI,CAACI,OAAO,EAAE,EAAE;IAChCH,IAAI,CAACI,IAAI,CAACF,GAAG,CAACG,GAAG,CAAEC,IAAI,iBAAK,QAAC,OAAO;MAAoC,IAAI,EAAEA,IAAK;MAAC,QAAQ,EAAEP,IAAI,CAACQ,UAAU,CAACD,IAAI;IAAE,GAAzE,GAAEA,IAAI,CAACJ,GAAI,IAAGI,IAAI,CAACE,MAAO,EAAC;MAAA;MAAA;MAAA;IAAA,QAAgD,CAAC,CAAC;EAC1H;EAEA,MAAMC,KAAK,GAAG;IACZC,mBAAmB,EAAG,UAASX,IAAI,CAACY,OAAQ,QAAO;IACnDC,WAAW,EAAG,GAAEb,IAAI,CAACY,OAAQ,MAAKZ,IAAI,CAACc,IAAK;EAC9C,CAAC;EAED,oBACE;IAAK,SAAS,EAAC,YAAY;IAAC,KAAK,EAAEJ,KAAM;IAAA,UACtCT;EAAI;IAAA;IAAA;IAAA;EAAA,QACD;AAEV;AAAC,GAjBuBF,IAAI;AAAA,KAAJA,IAAI;AAiB3B;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}