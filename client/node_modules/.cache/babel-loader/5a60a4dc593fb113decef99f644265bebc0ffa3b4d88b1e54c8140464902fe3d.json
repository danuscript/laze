{"ast":null,"code":"var _jsxFileName = \"/Users/danny/Documents/Software Engineering/laze/src/Components/GridVis.jsx\",\n  _s = $RefreshSig$();\nimport CellVis from './CellVis';\nimport React, { useContext } from 'react';\nimport { GlobalContext } from '../Context/GlobalState';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Grid(_ref) {\n  _s();\n  let {\n    grid,\n    mode\n  } = _ref;\n  const {\n    players,\n    darkMode\n  } = useContext(GlobalContext);\n  let display = players === 1 ? mode === '1p' ? '' : 'none' : mode === '1p' ? 'none' : '';\n  if (!grid) return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      classList: \"grid\",\n      style: {\n        height: 'calc(100vh - 1.35em - 7em)',\n        border: `4px solid ${darkMode ? 'var(--lightBlue)' : 'var(--darkBlue)'}`,\n        aspectRatio: '1 / 1',\n        display: display\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n  const maze = [];\n  for (const row of grid.eachRow()) {\n    maze.push(row.map(cell => /*#__PURE__*/_jsxDEV(CellVis, {\n      cell: cell,\n      distance: grid.contentsOf(cell)\n    }, `${cell.row},${cell.column}`, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 33\n    }, this)));\n  }\n  const style = {\n    gridTemplateColumns: `repeat(${grid.columns}, 1fr)`,\n    aspectRatio: `${grid.columns} / ${grid.rows}`,\n    display: display,\n    outline: mode === '1p' ? '' : '3px solid red'\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"grid grid1\",\n    style: style,\n    children: maze\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n}\n_s(Grid, \"QfAgH/A6rggSadAjdCfybZYR8XU=\");\n_c = Grid;\n;\nvar _c;\n$RefreshReg$(_c, \"Grid\");","map":{"version":3,"names":["CellVis","React","useContext","GlobalContext","Grid","grid","mode","players","darkMode","display","height","border","aspectRatio","maze","row","eachRow","push","map","cell","contentsOf","column","style","gridTemplateColumns","columns","rows","outline"],"sources":["/Users/danny/Documents/Software Engineering/laze/src/Components/GridVis.jsx"],"sourcesContent":["import CellVis from './CellVis';\nimport React, { useContext } from 'react';\nimport { GlobalContext } from '../Context/GlobalState';\n\nexport default function Grid({ grid, mode }) {\n  const { players, darkMode } = useContext(GlobalContext)\n  let display = players === 1\n  ? mode === '1p' ? '' : 'none'\n  : mode === '1p' ? 'none' : '';\n  if (!grid) return (\n    <>\n      <div classList='grid' style={{\n        height: 'calc(100vh - 1.35em - 7em)',\n        border: `4px solid ${darkMode ? 'var(--lightBlue)' : 'var(--darkBlue)'}`,\n        aspectRatio: '1 / 1',\n        display: display,\n      }}>\n\n      </div>\n    </>\n  );\n  const maze = [];\n  for (const row of grid.eachRow()) {\n    maze.push(row.map((cell) => <CellVis key={`${cell.row},${cell.column}`} cell={cell} distance={grid.contentsOf(cell)}/>))\n  }\n\n  const style = {\n    gridTemplateColumns: `repeat(${grid.columns}, 1fr)`,\n    aspectRatio: `${grid.columns} / ${grid.rows}`,\n    display: display,\n    outline: mode === '1p' ? '' : '3px solid red',\n  }\n\n  return (\n    <div className='grid grid1' style={style}>\n      {maze}\n    </div>\n  );\n};\n"],"mappings":";;AAAA,OAAOA,OAAO,MAAM,WAAW;AAC/B,OAAOC,KAAK,IAAIC,UAAU,QAAQ,OAAO;AACzC,SAASC,aAAa,QAAQ,wBAAwB;AAAC;AAAA;AAEvD,eAAe,SAASC,IAAI,OAAiB;EAAA;EAAA,IAAhB;IAAEC,IAAI;IAAEC;EAAK,CAAC;EACzC,MAAM;IAAEC,OAAO;IAAEC;EAAS,CAAC,GAAGN,UAAU,CAACC,aAAa,CAAC;EACvD,IAAIM,OAAO,GAAGF,OAAO,KAAK,CAAC,GACzBD,IAAI,KAAK,IAAI,GAAG,EAAE,GAAG,MAAM,GAC3BA,IAAI,KAAK,IAAI,GAAG,MAAM,GAAG,EAAE;EAC7B,IAAI,CAACD,IAAI,EAAE,oBACT;IAAA,uBACE;MAAK,SAAS,EAAC,MAAM;MAAC,KAAK,EAAE;QAC3BK,MAAM,EAAE,4BAA4B;QACpCC,MAAM,EAAG,aAAYH,QAAQ,GAAG,kBAAkB,GAAG,iBAAkB,EAAC;QACxEI,WAAW,EAAE,OAAO;QACpBH,OAAO,EAAEA;MACX;IAAE;MAAA;MAAA;MAAA;IAAA;EAEI,iBACL;EAEL,MAAMI,IAAI,GAAG,EAAE;EACf,KAAK,MAAMC,GAAG,IAAIT,IAAI,CAACU,OAAO,EAAE,EAAE;IAChCF,IAAI,CAACG,IAAI,CAACF,GAAG,CAACG,GAAG,CAAEC,IAAI,iBAAK,QAAC,OAAO;MAAoC,IAAI,EAAEA,IAAK;MAAC,QAAQ,EAAEb,IAAI,CAACc,UAAU,CAACD,IAAI;IAAE,GAAzE,GAAEA,IAAI,CAACJ,GAAI,IAAGI,IAAI,CAACE,MAAO,EAAC;MAAA;MAAA;MAAA;IAAA,QAAgD,CAAC,CAAC;EAC1H;EAEA,MAAMC,KAAK,GAAG;IACZC,mBAAmB,EAAG,UAASjB,IAAI,CAACkB,OAAQ,QAAO;IACnDX,WAAW,EAAG,GAAEP,IAAI,CAACkB,OAAQ,MAAKlB,IAAI,CAACmB,IAAK,EAAC;IAC7Cf,OAAO,EAAEA,OAAO;IAChBgB,OAAO,EAAEnB,IAAI,KAAK,IAAI,GAAG,EAAE,GAAG;EAChC,CAAC;EAED,oBACE;IAAK,SAAS,EAAC,YAAY;IAAC,KAAK,EAAEe,KAAM;IAAA,UACtCR;EAAI;IAAA;IAAA;IAAA;EAAA,QACD;AAEV;AAAC,GAlCuBT,IAAI;AAAA,KAAJA,IAAI;AAkC3B;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}