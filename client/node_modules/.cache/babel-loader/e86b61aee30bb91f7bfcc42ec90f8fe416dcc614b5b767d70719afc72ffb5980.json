{"ast":null,"code":"var _jsxFileName = \"/Users/danny/Documents/Software Engineering/laze/src/Components/ModeSelect.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { GlobalContext } from '../Context/GlobalState';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ModeSelect = () => {\n  _s();\n  const [mode, setMode] = useState('1P');\n  const {\n    darkMode\n  } = GlobalContext;\n  const handleModeChange = event => {\n    setMode(event.target.value);\n  };\n  const bgColor = darkMode ? red : 'var(--lightGray';\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"mode-select\",\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      className: `mode-option ${mode === '1P' ? 'active' : ''}`,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"radio\",\n        value: \"1P\",\n        checked: mode === '1P',\n        onChange: handleModeChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          color: mode === '1P' ? bgColor : 'currentcolor'\n        },\n        children: \"1P\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      className: `mode-option mode-right ${mode === '2P' ? 'active' : ''}`,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"radio\",\n        value: \"2P\",\n        checked: mode === '2P',\n        onChange: handleModeChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          color: mode === '2P' ? bgColor : 'currentcolor'\n        },\n        children: \"2P\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 5\n  }, this);\n};\n_s(ModeSelect, \"CKrVbYv9r00tm7uCx6qVLQzz+qs=\");\n_c = ModeSelect;\nexport default ModeSelect;\nvar _c;\n$RefreshReg$(_c, \"ModeSelect\");","map":{"version":3,"names":["React","useState","GlobalContext","ModeSelect","mode","setMode","darkMode","handleModeChange","event","target","value","bgColor","red","color"],"sources":["/Users/danny/Documents/Software Engineering/laze/src/Components/ModeSelect.jsx"],"sourcesContent":["import React, { useState } from 'react';\nimport { GlobalContext } from '../Context/GlobalState';\n\nconst ModeSelect = () => {\n  const [mode, setMode] = useState('1P');\n  const { darkMode } = GlobalContext;\n\n  const handleModeChange = (event) => {\n    setMode(event.target.value);\n  };\n\n  const bgColor = darkMode ? red : 'var(--lightGray';\n\n  return (\n    <div className=\"mode-select\">\n      <label className={`mode-option ${mode === '1P' ? 'active' : ''}`}>\n        <input\n          type=\"radio\"\n          value=\"1P\"\n          checked={mode === '1P'}\n          onChange={handleModeChange}\n        />\n        <div style={{ color: mode === '1P' ? bgColor : 'currentcolor'}}>1P</div>\n        \n      </label>\n      <label className={`mode-option mode-right ${mode === '2P' ? 'active' : ''}`}>\n        <input\n          type=\"radio\"\n          value=\"2P\"\n          checked={mode === '2P'}\n          onChange={handleModeChange}\n        />\n        <div style={{ color: mode === '2P' ? bgColor : 'currentcolor'}}>2P</div>\n      </label>\n    </div>\n  );\n};\n\nexport default ModeSelect;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,aAAa,QAAQ,wBAAwB;AAAC;AAEvD,MAAMC,UAAU,GAAG,MAAM;EAAA;EACvB,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGJ,QAAQ,CAAC,IAAI,CAAC;EACtC,MAAM;IAAEK;EAAS,CAAC,GAAGJ,aAAa;EAElC,MAAMK,gBAAgB,GAAIC,KAAK,IAAK;IAClCH,OAAO,CAACG,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC;EAC7B,CAAC;EAED,MAAMC,OAAO,GAAGL,QAAQ,GAAGM,GAAG,GAAG,iBAAiB;EAElD,oBACE;IAAK,SAAS,EAAC,aAAa;IAAA,wBAC1B;MAAO,SAAS,EAAG,eAAcR,IAAI,KAAK,IAAI,GAAG,QAAQ,GAAG,EAAG,EAAE;MAAA,wBAC/D;QACE,IAAI,EAAC,OAAO;QACZ,KAAK,EAAC,IAAI;QACV,OAAO,EAAEA,IAAI,KAAK,IAAK;QACvB,QAAQ,EAAEG;MAAiB;QAAA;QAAA;QAAA;MAAA,QAC3B,eACF;QAAK,KAAK,EAAE;UAAEM,KAAK,EAAET,IAAI,KAAK,IAAI,GAAGO,OAAO,GAAG;QAAc,CAAE;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAAS;IAAA;MAAA;MAAA;MAAA;IAAA,QAElE,eACR;MAAO,SAAS,EAAG,0BAAyBP,IAAI,KAAK,IAAI,GAAG,QAAQ,GAAG,EAAG,EAAE;MAAA,wBAC1E;QACE,IAAI,EAAC,OAAO;QACZ,KAAK,EAAC,IAAI;QACV,OAAO,EAAEA,IAAI,KAAK,IAAK;QACvB,QAAQ,EAAEG;MAAiB;QAAA;QAAA;QAAA;MAAA,QAC3B,eACF;QAAK,KAAK,EAAE;UAAEM,KAAK,EAAET,IAAI,KAAK,IAAI,GAAGO,OAAO,GAAG;QAAc,CAAE;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAAS;IAAA;MAAA;MAAA;MAAA;IAAA,QAClE;EAAA;IAAA;IAAA;IAAA;EAAA,QACJ;AAEV,CAAC;AAAC,GAjCIR,UAAU;AAAA,KAAVA,UAAU;AAmChB,eAAeA,UAAU;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}